{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOpzhNShsrB0TFMEwYGynZg",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/IkramAlgo/IkramAlgo/blob/main/AdBudget_LinearRegression.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Import necessary libraries\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n",
        "from sklearn.neural_network import MLPClassifier\n",
        "\n",
        "# Sample dataset (Ad Spending in $1000 and Revenue in $1000, labeled for classification)\n",
        "data = {\n",
        "    'Ad_Spending': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n",
        "    'Revenue': [0, 0, 0, 0, 1, 1, 1, 1, 1, 1]  # Classified as 0 = Low Revenue, 1 = High Revenue\n",
        "}\n",
        "df = pd.DataFrame(data)\n",
        "\n",
        "# Splitting data into features and target variable\n",
        "X = df[['Ad_Spending']]\n",
        "y = df['Revenue']\n",
        "\n",
        "# Splitting data into training and testing sets (80% training, 20% testing)\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "\n",
        "# Logistic Regression Model\n",
        "log_reg = LogisticRegression()\n",
        "log_reg.fit(X_train, y_train)\n",
        "y_pred = log_reg.predict(X_test)\n",
        "\n",
        "# Evaluating Logistic Regression\n",
        "print(\"Logistic Regression Accuracy:\", accuracy_score(y_test, y_pred))\n",
        "print(\"Confusion Matrix:\\n\", confusion_matrix(y_test, y_pred))\n",
        "print(\"Classification Report:\\n\", classification_report(y_test, y_pred))\n",
        "\n",
        "# Neural Network Model (Multi-layer Perceptron)\n",
        "nn_model = MLPClassifier(hidden_layer_sizes=(5,), max_iter=1000, random_state=42)\n",
        "nn_model.fit(X_train, y_train)\n",
        "nn_pred = nn_model.predict(X_test)\n",
        "\n",
        "# Evaluating Neural Network\n",
        "print(\"Neural Network Accuracy:\", accuracy_score(y_test, nn_pred))\n",
        "\n",
        "# Visualizing the Results\n",
        "plt.scatter(X, y, color='blue', label='Actual Data')\n",
        "plt.plot(X, log_reg.predict(X), color='red', label='Logistic Regression')\n",
        "plt.xlabel(\"Ad Spending ($1000)\")\n",
        "plt.ylabel(\"Revenue (Class: 0 = Low, 1 = High)\")\n",
        "plt.title(\"Logistic Regression & Neural Network Model\")\n",
        "plt.legend()\n",
        "plt.show()\n",
        "\n",
        "# Manual Gradient Descent Implementation for Logistic Regression\n",
        "def sigmoid(z):\n",
        "    return 1 / (1 + np.exp(-z))\n",
        "\n",
        "def compute_loss(y, y_hat):\n",
        "    return -np.mean(y * np.log(y_hat) + (1 - y) * np.log(1 - y_hat))\n",
        "\n",
        "alpha = 0.01  # Learning rate\n",
        "iterations = 1000\n",
        "m = len(y_train)\n",
        "w = np.zeros((X_train.shape[1], 1))\n",
        "b = 0\n",
        "\n",
        "for i in range(iterations):\n",
        "    z = np.dot(X_train, w) + b\n",
        "    y_hat = sigmoid(z)\n",
        "    loss = compute_loss(y_train.values.reshape(-1, 1), y_hat)\n",
        "    dw = np.dot(X_train.T, (y_hat - y_train.values.reshape(-1, 1))) / m\n",
        "    db = np.sum(y_hat - y_train.values.reshape(-1, 1)) / m\n",
        "    w -= alpha * dw\n",
        "    b -= alpha * db\n",
        "\n",
        "    if i % 100 == 0:\n",
        "        print(f\"Iteration {i}: Loss = {loss:.4f}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 961
        },
        "id": "K3W6A8sOrwtM",
        "outputId": "3cae3567-1403-4a27-ae02-2f3bd917367d"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Logistic Regression Accuracy: 1.0\n",
            "Confusion Matrix:\n",
            " [[1 0]\n",
            " [0 1]]\n",
            "Classification Report:\n",
            "               precision    recall  f1-score   support\n",
            "\n",
            "           0       1.00      1.00      1.00         1\n",
            "           1       1.00      1.00      1.00         1\n",
            "\n",
            "    accuracy                           1.00         2\n",
            "   macro avg       1.00      1.00      1.00         2\n",
            "weighted avg       1.00      1.00      1.00         2\n",
            "\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:691: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (1000) reached and the optimization hasn't converged yet.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Neural Network Accuracy: 1.0\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Iteration 0: Loss = 0.6931\n",
            "Iteration 100: Loss = 0.4974\n",
            "Iteration 200: Loss = 0.4797\n",
            "Iteration 300: Loss = 0.4633\n",
            "Iteration 400: Loss = 0.4481\n",
            "Iteration 500: Loss = 0.4339\n",
            "Iteration 600: Loss = 0.4208\n",
            "Iteration 700: Loss = 0.4085\n",
            "Iteration 800: Loss = 0.3971\n",
            "Iteration 900: Loss = 0.3865\n"
          ]
        }
      ]
    }
  ]
}
